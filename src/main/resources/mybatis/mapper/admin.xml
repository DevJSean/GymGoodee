<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.goodee.gym.mapper.AdminMapper">
	<!-- 강사 추가하기 -->
	<insert id="insertTeacher" parameterType="TeacherDTO">
		INSERT INTO TEACHER
			(TEACHER_NO, TEACHER_NAME, TEACHER_GENDER, TEACHER_SUBJECT)
		VALUES
			(TEACHER_SEQ.NEXTVAL, #{teacherName}, #{teacherGender}, #{teacherSubject})
	</insert>
	
	<!-- 강사 목록 가져오기 -->
	<select id="selectTeachers" resultType="TeacherDTO">
		SELECT 
			TEACHER_NO, TEACHER_NAME, TEACHER_GENDER, TEACHER_SUBJECT 
		  FROM TEACHER
		ORDER BY TEACHER_SUBJECT, TEACHER_NO DESC
	</select>
	
	
	<!-- 강좌 개설 시 종목 선택 후 해당 종목 강사 목록 가져오기 -->
	<select id="selectTeachersBySubject" parameterType="String" resultType="TeacherDTO">
		SELECT 
			TEACHER_NO, TEACHER_NAME, TEACHER_GENDER, TEACHER_SUBJECT 
		  FROM TEACHER
		 WHERE TEACHER_SUBJECT = #{subject}
	</select>
	
	<!-- 강좌 개설 시 종목 선택 후 해당 종목 장소 목록 가져오기 -->
	<select id="selectLocationsBySubject" parameterType="String" resultType="LocationDTO">
		SELECT 
			LOCATION_CODE, LOCATION_LIMIT
		  FROM LOCATION
		 WHERE SUBSTR(LOCATION_CODE,1,2) = #{subject}
	</select>
	
	<!-- 개설하려고 하는 강사의 번호에 해당하는 classcode들을 가져온다.   -->
	<select id="selectCodesFromReservationByTeacherNo" parameterType="Long" resultType="String">
		SELECT CLASS_CODE
		  FROM CLASS
		 WHERE TEACHER_NO = #{teacherNo}
	</select>
	
	
	<!-- 개설 강좌 추가하기 -->
	<insert id="insertClass" parameterType="ClassDTO">
		INSERT INTO CLASS
			(CLASS_CODE, TEACHER_NO, LOCATION_CODE, CLASS_DATE, CLASS_TIME)
		VALUES
			(#{classCode}, #{teacherNo}, #{locationCode}, #{classDate}, #{classTime})
	</insert>
	
	<!-- 개설 강좌 목록 가져오기 -->
	<select id="selectClasses" resultType="ClassDTO">
		SELECT A.CLASS_CODE, A.TEACHER_NO, A.LOCATION_CODE, A.CLASS_DATE, A.CLASS_TIME, A.TEACHER_NAME
		  FROM (SELECT T.TEACHER_NAME, C.CLASS_CODE, T.TEACHER_NO, C.LOCATION_CODE, C.CLASS_DATE, C.CLASS_TIME, T.TEACHER_SUBJECT
		          FROM CLASS C, TEACHER T
		         WHERE T.TEACHER_NO = C.TEACHER_NO
                 ORDER BY C.CLASS_DATE DESC, T.TEACHER_SUBJECT) A
	</select>
	
	
	<!-- 테스트 -->
	<select id="selectClassCount" resultType="Integer">
		SELECT COUNT(CLASS_CODE)
		FROM CLASS
	</select>
	
	<select id="selectClassList" parameterType="Map" resultType="ClassDTO">
		SELECT A.RN, A.CLASS_CODE, A.TEACHER_NO, A.LOCATION_CODE, A.CLASS_DATE, A.CLASS_TIME, A.TEACHER_NAME
		  FROM (SELECT ROW_NUMBER() OVER(ORDER BY C.CLASS_DATE DESC, C.LOCATION_CODE)AS RN, T.TEACHER_NAME, C.CLASS_CODE, T.TEACHER_NO, C.LOCATION_CODE, C.CLASS_DATE, C.CLASS_TIME, T.TEACHER_SUBJECT
		  		  FROM CLASS C, TEACHER T
		  		 WHERE C.TEACHER_NO = T.TEACHER_NO) A
		 WHERE A.RN BETWEEN #{beginRecord} AND #{endRecord}
	</select>

</mapper>